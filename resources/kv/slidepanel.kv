<SlidePanel>:
	size_hint: 1, 1
	_side_panel: sidepanel
	_main_panel: mainpanel
	_join_image: joinimage
	BoxLayout:
		id: sidepanel
		y: root.y
		x: root.x - (1-root._anim_progress)*root.side_panel_init_offset*root.side_panel_width
		height: root.height
		width: root.side_panel_width
		opacity: root.side_panel_opacity + (1 - root.side_panel_opacity)*root._anim_progress
		canvas:
			Color:
				rgba: 1, 1, 1, 1
			Rectangle:
				size: self.size
				pos: self.pos
		canvas.after:
			Color:
				rgba: (0, 0, 0, (1 - root._anim_progress) * root.side_panel_darknes)
			Rectangle:
				size: self.size
				pos: self.pos
	BoxLayout:
		id: mainpanel
		x: root.x + root._anim_progress * root.side_panel_width * root.main_panel_final_offset
		y: root.y
		size: root.size
		canvas:
			Color:
				rgba: 0, 0, 0, 1
			Rectangle:
				pos: self.pos
				size: self.size
		canvas.after:
			Color:
				rgba: (0, 0, 0, root._anim_progress * root.main_panel_darknes)
			Rectangle:
				size: self.size
				pos: self.pos
	Image:
		id: joinimage
		opacity: min(sidepanel.opacity, 0 if root._anim_progress < 0.00001 else min(root._anim_progress * 40, 1))
		source: root._choose_image(root._main_above, root.separator_image)
		mipmap: False
		width: root.separator_image_width
		height: root._side_panel.height
		x: (mainpanel.x - self.width + 1) if root._main_above else (sidepanel.x + sidepanel.width - 1)
		y: root.y
		allow_stretch: True
		keep_ratio: False

